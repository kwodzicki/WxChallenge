#!/usr/bin/env python
import logging;
from WxChallenge import WxChallenge;

if __name__ == "__main__":
  import argparse;                                                              # Import library for parsing
  parser = argparse.ArgumentParser(description="WxChallenge Semester Update");     # Set the description of the script to be printed in the help doc, i.e., ./script -h
  parser.add_argument("--debug", action='store_true', 
    help="Turn on debugging information");
  parser.add_argument("-v", "--verbose", action='store_true', 
    help="Increase verbosity");                                                 # Verbose option at command line
  parser.add_argument("schools", type=str, nargs='*', 
	  help="School code(s). Only data for these schools will be scraped"); 
  parser.add_argument("-s", "--semester", type=str, 
	  help="Semester to update. MUST be used with year."); 
  parser.add_argument("-y", "--year", type=int, 
	  help="Year to update. MUST be used with semester."); 

  args = parser.parse_args();                                                   # Parse the arguments
  if args.semester is None or args.year is None:
	  args.semester = None;
	  args.year     = None;
  log  = logging.getLogger('WxChallenge');
  log.setLevel(logging.DEBUG);
  screen_log = logging.StreamHandler();                                         # Get a stream handler for screen logs
  log.addHandler( screen_log );                                                 # Add the handler to the logger
  if args.verbose: screen_log.setLevel( logging.DEBUG );                        # Set the logging level for the screen

  if args.debug:
    log.setLevel(logging.DEGUB);
  elif args.verbose: 
    log.setLevel(logging.INFO);
  else:
    log.setLevel(logging.WARNING);
  
  inst = WxChallenge(verbose = args.verbose);
  inst.update_Semester( 
	  semester = args.semester,
	  year     = args.year,
	  schools  = args.schools if len(args.schools) > 0 else None
	);     
  inst.close();